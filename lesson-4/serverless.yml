service: lesson-4
provider: aws
runtime: nodejs4.3

functions:
  getItems:
    handler: handler.getItems
    events:
    - http:
        path: items/{itemId}
        method: get
  postItem:
    handler: handler.postItem
    events:
    - http:
        path: items
        method: post
  putItem:
    handler: handler.putItem
    events:
    - http:
        path: items/{itemId}
        method: put
  deleteItem:
    handler: handler.deleteItem
    events:
    - http:
        path: items/{itemId}
        method: delete

resources:
  Resources:
    IamPolicyLambdaDynamo:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: dev-com-sb-actionboard-auth-dynamodb
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:Scan
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:DeleteItem
            - dynamodb:Query
            - dynamodb:UpdateItem
            Resource:
            - "Fn::Join": ["", ["arn:aws:dynamodb:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":table/items*"]]
        Roles:
        - "Ref": "IamRoleLambda"
    TaskTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "itemId"
          AttributeType: "S"
        - AttributeName: "description"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "itemId"
          KeyType: "HASH"
        - AttributeName: "description"
          KeyType: "RANGE"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: "items"
